
DotMatrixScrollingText.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000024c  00800100  00000564  000005f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000564  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002c0  0080034c  0080034c  00000844  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000844  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000874  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  000008b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001068  00000000  00000000  00000968  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ae2  00000000  00000000  000019d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007f6  00000000  00000000  000024b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000234  00000000  00000000  00002ca8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000569  00000000  00000000  00002edc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006a6  00000000  00000000  00003445  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  00003aeb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	13 e0       	ldi	r17, 0x03	; 3
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e6       	ldi	r30, 0x64	; 100
  a0:	f5 e0       	ldi	r31, 0x05	; 5
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 34       	cpi	r26, 0x4C	; 76
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	26 e0       	ldi	r18, 0x06	; 6
  b4:	ac e4       	ldi	r26, 0x4C	; 76
  b6:	b3 e0       	ldi	r27, 0x03	; 3
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 30       	cpi	r26, 0x0C	; 12
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	3e d2       	rcall	.+1148   	; 0x540 <main>
  c4:	4d c2       	rjmp	.+1178   	; 0x560 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <look_up>:
		}
	}
};


letter look_up(char c){
  c8:	ac 01       	movw	r20, r24
	for(int i = 0; i < 29; i++)
	{
		if(d[i].character == c)
  ca:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
  ce:	68 17       	cp	r22, r24
  d0:	61 f0       	breq	.+24     	; 0xea <look_up+0x22>
		{
			return d[i];
		}
		if (c == 60)
  d2:	6c 33       	cpi	r22, 0x3C	; 60
  d4:	d1 f0       	breq	.+52     	; 0x10a <look_up+0x42>
		{
			return d[28];
		}
		if(c == 62)
  d6:	6e 33       	cpi	r22, 0x3E	; 62
  d8:	09 f1       	breq	.+66     	; 0x11c <look_up+0x54>
  da:	e3 e1       	ldi	r30, 0x13	; 19
  dc:	f1 e0       	ldi	r31, 0x01	; 1
	}
};


letter look_up(char c){
	for(int i = 0; i < 29; i++)
  de:	21 e0       	ldi	r18, 0x01	; 1
  e0:	30 e0       	ldi	r19, 0x00	; 0
	{
		if(d[i].character == c)
  e2:	90 81       	ld	r25, Z
  e4:	96 13       	cpse	r25, r22
  e6:	23 c0       	rjmp	.+70     	; 0x12e <look_up+0x66>
  e8:	02 c0       	rjmp	.+4      	; 0xee <look_up+0x26>
	}
};


letter look_up(char c){
	for(int i = 0; i < 29; i++)
  ea:	20 e0       	ldi	r18, 0x00	; 0
  ec:	30 e0       	ldi	r19, 0x00	; 0
	{
		if(d[i].character == c)
		{
			return d[i];
  ee:	83 e1       	ldi	r24, 0x13	; 19
  f0:	82 9f       	mul	r24, r18
  f2:	f0 01       	movw	r30, r0
  f4:	83 9f       	mul	r24, r19
  f6:	f0 0d       	add	r31, r0
  f8:	11 24       	eor	r1, r1
  fa:	e0 50       	subi	r30, 0x00	; 0
  fc:	ff 4f       	sbci	r31, 0xFF	; 255
  fe:	da 01       	movw	r26, r20
 100:	01 90       	ld	r0, Z+
 102:	0d 92       	st	X+, r0
 104:	8a 95       	dec	r24
 106:	e1 f7       	brne	.-8      	; 0x100 <look_up+0x38>
 108:	20 c0       	rjmp	.+64     	; 0x14a <look_up+0x82>
		}
		if (c == 60)
		{
			return d[28];
 10a:	83 e1       	ldi	r24, 0x13	; 19
 10c:	e4 e1       	ldi	r30, 0x14	; 20
 10e:	f3 e0       	ldi	r31, 0x03	; 3
 110:	da 01       	movw	r26, r20
 112:	01 90       	ld	r0, Z+
 114:	0d 92       	st	X+, r0
 116:	8a 95       	dec	r24
 118:	e1 f7       	brne	.-8      	; 0x112 <look_up+0x4a>
 11a:	17 c0       	rjmp	.+46     	; 0x14a <look_up+0x82>
		}
		if(c == 62)
		{
			return d[29];
 11c:	83 e1       	ldi	r24, 0x13	; 19
 11e:	e7 e2       	ldi	r30, 0x27	; 39
 120:	f3 e0       	ldi	r31, 0x03	; 3
 122:	da 01       	movw	r26, r20
 124:	01 90       	ld	r0, Z+
 126:	0d 92       	st	X+, r0
 128:	8a 95       	dec	r24
 12a:	e1 f7       	brne	.-8      	; 0x124 <look_up+0x5c>
 12c:	0e c0       	rjmp	.+28     	; 0x14a <look_up+0x82>
	}
};


letter look_up(char c){
	for(int i = 0; i < 29; i++)
 12e:	2f 5f       	subi	r18, 0xFF	; 255
 130:	3f 4f       	sbci	r19, 0xFF	; 255
 132:	73 96       	adiw	r30, 0x13	; 19
 134:	2d 31       	cpi	r18, 0x1D	; 29
 136:	31 05       	cpc	r19, r1
 138:	a1 f6       	brne	.-88     	; 0xe2 <look_up+0x1a>
		{
			return d[29];
		}
	}
	
	return d[0];
 13a:	83 e1       	ldi	r24, 0x13	; 19
 13c:	e0 e0       	ldi	r30, 0x00	; 0
 13e:	f1 e0       	ldi	r31, 0x01	; 1
 140:	da 01       	movw	r26, r20
 142:	01 90       	ld	r0, Z+
 144:	0d 92       	st	X+, r0
 146:	8a 95       	dec	r24
 148:	e1 f7       	brne	.-8      	; 0x142 <look_up+0x7a>
 14a:	ca 01       	movw	r24, r20
 14c:	08 95       	ret

0000014e <startDotmatrix>:
}


void setScrollingSpeed(int s)
{
	scrollingSpeed = s;
 14e:	84 ea       	ldi	r24, 0xA4	; 164
 150:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 154:	e4 e7       	ldi	r30, 0x74	; 116
 156:	f0 e0       	ldi	r31, 0x00	; 0
 158:	80 81       	ld	r24, Z
 15a:	88 23       	and	r24, r24
 15c:	ec f7       	brge	.-6      	; 0x158 <startDotmatrix+0xa>
 15e:	08 95       	ret

00000160 <writeToDotmatrix>:
 160:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 164:	84 e8       	ldi	r24, 0x84	; 132
 166:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 16a:	e4 e7       	ldi	r30, 0x74	; 116
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	80 81       	ld	r24, Z
 170:	88 23       	and	r24, r24
 172:	ec f7       	brge	.-6      	; 0x16e <writeToDotmatrix+0xe>
 174:	08 95       	ret

00000176 <dotmatrixInit>:
 176:	af 92       	push	r10
 178:	bf 92       	push	r11
 17a:	cf 92       	push	r12
 17c:	df 92       	push	r13
 17e:	ef 92       	push	r14
 180:	ff 92       	push	r15
 182:	0f 93       	push	r16
 184:	1f 93       	push	r17
 186:	cf 93       	push	r28
 188:	df 93       	push	r29
 18a:	00 d0       	rcall	.+0      	; 0x18c <dotmatrixInit+0x16>
 18c:	00 d0       	rcall	.+0      	; 0x18e <dotmatrixInit+0x18>
 18e:	00 d0       	rcall	.+0      	; 0x190 <dotmatrixInit+0x1a>
 190:	cd b7       	in	r28, 0x3d	; 61
 192:	de b7       	in	r29, 0x3e	; 62
 194:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 198:	80 e2       	ldi	r24, 0x20	; 32
 19a:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 19e:	86 e0       	ldi	r24, 0x06	; 6
 1a0:	ec e3       	ldi	r30, 0x3C	; 60
 1a2:	f3 e0       	ldi	r31, 0x03	; 3
 1a4:	de 01       	movw	r26, r28
 1a6:	11 96       	adiw	r26, 0x01	; 1
 1a8:	01 90       	ld	r0, Z+
 1aa:	0d 92       	st	X+, r0
 1ac:	8a 95       	dec	r24
 1ae:	e1 f7       	brne	.-8      	; 0x1a8 <dotmatrixInit+0x32>
 1b0:	ce 01       	movw	r24, r28
 1b2:	01 96       	adiw	r24, 0x01	; 1
 1b4:	7c 01       	movw	r14, r24
 1b6:	5e 01       	movw	r10, r28
 1b8:	97 e0       	ldi	r25, 0x07	; 7
 1ba:	a9 0e       	add	r10, r25
 1bc:	b1 1c       	adc	r11, r1
 1be:	0f 2e       	mov	r0, r31
 1c0:	f4 e7       	ldi	r31, 0x74	; 116
 1c2:	cf 2e       	mov	r12, r31
 1c4:	d1 2c       	mov	r13, r1
 1c6:	f0 2d       	mov	r31, r0
 1c8:	04 e9       	ldi	r16, 0x94	; 148
 1ca:	c1 df       	rcall	.-126    	; 0x14e <startDotmatrix>
 1cc:	f7 01       	movw	r30, r14
 1ce:	10 81       	ld	r17, Z
 1d0:	f2 e0       	ldi	r31, 0x02	; 2
 1d2:	ef 0e       	add	r14, r31
 1d4:	f1 1c       	adc	r15, r1
 1d6:	10 52       	subi	r17, 0x20	; 32
 1d8:	81 2f       	mov	r24, r17
 1da:	c2 df       	rcall	.-124    	; 0x160 <writeToDotmatrix>
 1dc:	81 e2       	ldi	r24, 0x21	; 33
 1de:	c0 df       	rcall	.-128    	; 0x160 <writeToDotmatrix>
 1e0:	f6 01       	movw	r30, r12
 1e2:	00 83       	st	Z, r16
 1e4:	b4 df       	rcall	.-152    	; 0x14e <startDotmatrix>
 1e6:	81 2f       	mov	r24, r17
 1e8:	bb df       	rcall	.-138    	; 0x160 <writeToDotmatrix>
 1ea:	80 ea       	ldi	r24, 0xA0	; 160
 1ec:	b9 df       	rcall	.-142    	; 0x160 <writeToDotmatrix>
 1ee:	f6 01       	movw	r30, r12
 1f0:	00 83       	st	Z, r16
 1f2:	ad df       	rcall	.-166    	; 0x14e <startDotmatrix>
 1f4:	81 2f       	mov	r24, r17
 1f6:	b4 df       	rcall	.-152    	; 0x160 <writeToDotmatrix>
 1f8:	87 ee       	ldi	r24, 0xE7	; 231
 1fa:	b2 df       	rcall	.-156    	; 0x160 <writeToDotmatrix>
 1fc:	f6 01       	movw	r30, r12
 1fe:	00 83       	st	Z, r16
 200:	a6 df       	rcall	.-180    	; 0x14e <startDotmatrix>
 202:	81 2f       	mov	r24, r17
 204:	ad df       	rcall	.-166    	; 0x160 <writeToDotmatrix>
 206:	81 e8       	ldi	r24, 0x81	; 129
 208:	ab df       	rcall	.-170    	; 0x160 <writeToDotmatrix>
 20a:	f6 01       	movw	r30, r12
 20c:	00 83       	st	Z, r16
 20e:	ea 14       	cp	r14, r10
 210:	fb 04       	cpc	r15, r11
 212:	d9 f6       	brne	.-74     	; 0x1ca <dotmatrixInit+0x54>
 214:	26 96       	adiw	r28, 0x06	; 6
 216:	0f b6       	in	r0, 0x3f	; 63
 218:	f8 94       	cli
 21a:	de bf       	out	0x3e, r29	; 62
 21c:	0f be       	out	0x3f, r0	; 63
 21e:	cd bf       	out	0x3d, r28	; 61
 220:	df 91       	pop	r29
 222:	cf 91       	pop	r28
 224:	1f 91       	pop	r17
 226:	0f 91       	pop	r16
 228:	ff 90       	pop	r15
 22a:	ef 90       	pop	r14
 22c:	df 90       	pop	r13
 22e:	cf 90       	pop	r12
 230:	bf 90       	pop	r11
 232:	af 90       	pop	r10
 234:	08 95       	ret

00000236 <clearDisplay>:
 236:	af 92       	push	r10
 238:	bf 92       	push	r11
 23a:	cf 92       	push	r12
 23c:	df 92       	push	r13
 23e:	ef 92       	push	r14
 240:	ff 92       	push	r15
 242:	0f 93       	push	r16
 244:	1f 93       	push	r17
 246:	cf 93       	push	r28
 248:	df 93       	push	r29
 24a:	00 d0       	rcall	.+0      	; 0x24c <clearDisplay+0x16>
 24c:	00 d0       	rcall	.+0      	; 0x24e <clearDisplay+0x18>
 24e:	00 d0       	rcall	.+0      	; 0x250 <clearDisplay+0x1a>
 250:	cd b7       	in	r28, 0x3d	; 61
 252:	de b7       	in	r29, 0x3e	; 62
 254:	86 e0       	ldi	r24, 0x06	; 6
 256:	ec e3       	ldi	r30, 0x3C	; 60
 258:	f3 e0       	ldi	r31, 0x03	; 3
 25a:	de 01       	movw	r26, r28
 25c:	11 96       	adiw	r26, 0x01	; 1
 25e:	01 90       	ld	r0, Z+
 260:	0d 92       	st	X+, r0
 262:	8a 95       	dec	r24
 264:	e1 f7       	brne	.-8      	; 0x25e <clearDisplay+0x28>
 266:	ce 01       	movw	r24, r28
 268:	01 96       	adiw	r24, 0x01	; 1
 26a:	7c 01       	movw	r14, r24
 26c:	5e 01       	movw	r10, r28
 26e:	97 e0       	ldi	r25, 0x07	; 7
 270:	a9 0e       	add	r10, r25
 272:	b1 1c       	adc	r11, r1
 274:	0f 2e       	mov	r0, r31
 276:	f4 e7       	ldi	r31, 0x74	; 116
 278:	cf 2e       	mov	r12, r31
 27a:	d1 2c       	mov	r13, r1
 27c:	f0 2d       	mov	r31, r0
 27e:	04 e9       	ldi	r16, 0x94	; 148
 280:	14 c0       	rjmp	.+40     	; 0x2aa <clearDisplay+0x74>
 282:	65 df       	rcall	.-310    	; 0x14e <startDotmatrix>
 284:	f7 01       	movw	r30, r14
 286:	80 81       	ld	r24, Z
 288:	80 52       	subi	r24, 0x20	; 32
 28a:	6a df       	rcall	.-300    	; 0x160 <writeToDotmatrix>
 28c:	81 2f       	mov	r24, r17
 28e:	68 df       	rcall	.-304    	; 0x160 <writeToDotmatrix>
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	66 df       	rcall	.-308    	; 0x160 <writeToDotmatrix>
 294:	f6 01       	movw	r30, r12
 296:	00 83       	st	Z, r16
 298:	1e 5f       	subi	r17, 0xFE	; 254
 29a:	10 31       	cpi	r17, 0x10	; 16
 29c:	91 f7       	brne	.-28     	; 0x282 <clearDisplay+0x4c>
 29e:	f2 e0       	ldi	r31, 0x02	; 2
 2a0:	ef 0e       	add	r14, r31
 2a2:	f1 1c       	adc	r15, r1
 2a4:	ae 14       	cp	r10, r14
 2a6:	bf 04       	cpc	r11, r15
 2a8:	11 f0       	breq	.+4      	; 0x2ae <clearDisplay+0x78>
 2aa:	10 e0       	ldi	r17, 0x00	; 0
 2ac:	ea cf       	rjmp	.-44     	; 0x282 <clearDisplay+0x4c>
 2ae:	26 96       	adiw	r28, 0x06	; 6
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	f8 94       	cli
 2b4:	de bf       	out	0x3e, r29	; 62
 2b6:	0f be       	out	0x3f, r0	; 63
 2b8:	cd bf       	out	0x3d, r28	; 61
 2ba:	df 91       	pop	r29
 2bc:	cf 91       	pop	r28
 2be:	1f 91       	pop	r17
 2c0:	0f 91       	pop	r16
 2c2:	ff 90       	pop	r15
 2c4:	ef 90       	pop	r14
 2c6:	df 90       	pop	r13
 2c8:	cf 90       	pop	r12
 2ca:	bf 90       	pop	r11
 2cc:	af 90       	pop	r10
 2ce:	08 95       	ret

000002d0 <selectLetters>:
 2d0:	cf 92       	push	r12
 2d2:	df 92       	push	r13
 2d4:	ef 92       	push	r14
 2d6:	ff 92       	push	r15
 2d8:	0f 93       	push	r16
 2da:	1f 93       	push	r17
 2dc:	cf 93       	push	r28
 2de:	df 93       	push	r29
 2e0:	cd b7       	in	r28, 0x3d	; 61
 2e2:	de b7       	in	r29, 0x3e	; 62
 2e4:	63 97       	sbiw	r28, 0x13	; 19
 2e6:	0f b6       	in	r0, 0x3f	; 63
 2e8:	f8 94       	cli
 2ea:	de bf       	out	0x3e, r29	; 62
 2ec:	0f be       	out	0x3f, r0	; 63
 2ee:	cd bf       	out	0x3d, r28	; 61
 2f0:	7c 01       	movw	r14, r24
 2f2:	6c 01       	movw	r12, r24
 2f4:	00 e0       	ldi	r16, 0x00	; 0
 2f6:	10 e0       	ldi	r17, 0x00	; 0
 2f8:	69 c0       	rjmp	.+210    	; 0x3cc <selectLetters+0xfc>
 2fa:	f6 01       	movw	r30, r12
 2fc:	61 91       	ld	r22, Z+
 2fe:	6f 01       	movw	r12, r30
 300:	ce 01       	movw	r24, r28
 302:	01 96       	adiw	r24, 0x01	; 1
 304:	e1 de       	rcall	.-574    	; 0xc8 <look_up>
 306:	89 81       	ldd	r24, Y+1	; 0x01
 308:	80 32       	cpi	r24, 0x20	; 32
 30a:	c9 f1       	breq	.+114    	; 0x37e <selectLetters+0xae>
 30c:	4a 81       	ldd	r20, Y+2	; 0x02
 30e:	5b 81       	ldd	r21, Y+3	; 0x03
 310:	14 16       	cp	r1, r20
 312:	15 06       	cpc	r1, r21
 314:	1c f5       	brge	.+70     	; 0x35c <selectLetters+0x8c>
 316:	fe 01       	movw	r30, r28
 318:	34 96       	adiw	r30, 0x04	; 4
 31a:	60 91 4c 03 	lds	r22, 0x034C	; 0x80034c <__data_end>
 31e:	70 91 4d 03 	lds	r23, 0x034D	; 0x80034d <__data_end+0x1>
 322:	db 01       	movw	r26, r22
 324:	aa 0f       	add	r26, r26
 326:	bb 1f       	adc	r27, r27
 328:	a0 5b       	subi	r26, 0xB0	; 176
 32a:	bc 4f       	sbci	r27, 0xFC	; 252
 32c:	9a 01       	movw	r18, r20
 32e:	22 0f       	add	r18, r18
 330:	33 1f       	adc	r19, r19
 332:	2d 5f       	subi	r18, 0xFD	; 253
 334:	3f 4f       	sbci	r19, 0xFF	; 255
 336:	81 e0       	ldi	r24, 0x01	; 1
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	8c 0f       	add	r24, r28
 33c:	9d 1f       	adc	r25, r29
 33e:	28 0f       	add	r18, r24
 340:	39 1f       	adc	r19, r25
 342:	81 91       	ld	r24, Z+
 344:	91 91       	ld	r25, Z+
 346:	8d 93       	st	X+, r24
 348:	9d 93       	st	X+, r25
 34a:	e2 17       	cp	r30, r18
 34c:	f3 07       	cpc	r31, r19
 34e:	c9 f7       	brne	.-14     	; 0x342 <selectLetters+0x72>
 350:	46 0f       	add	r20, r22
 352:	57 1f       	adc	r21, r23
 354:	50 93 4d 03 	sts	0x034D, r21	; 0x80034d <__data_end+0x1>
 358:	40 93 4c 03 	sts	0x034C, r20	; 0x80034c <__data_end>
 35c:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <__data_end>
 360:	90 91 4d 03 	lds	r25, 0x034D	; 0x80034d <__data_end+0x1>
 364:	fc 01       	movw	r30, r24
 366:	ee 0f       	add	r30, r30
 368:	ff 1f       	adc	r31, r31
 36a:	e0 5b       	subi	r30, 0xB0	; 176
 36c:	fc 4f       	sbci	r31, 0xFC	; 252
 36e:	11 82       	std	Z+1, r1	; 0x01
 370:	10 82       	st	Z, r1
 372:	01 96       	adiw	r24, 0x01	; 1
 374:	90 93 4d 03 	sts	0x034D, r25	; 0x80034d <__data_end+0x1>
 378:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <__data_end>
 37c:	25 c0       	rjmp	.+74     	; 0x3c8 <selectLetters+0xf8>
 37e:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <__data_end>
 382:	90 91 4d 03 	lds	r25, 0x034D	; 0x80034d <__data_end+0x1>
 386:	fc 01       	movw	r30, r24
 388:	ee 0f       	add	r30, r30
 38a:	ff 1f       	adc	r31, r31
 38c:	e0 5b       	subi	r30, 0xB0	; 176
 38e:	fc 4f       	sbci	r31, 0xFC	; 252
 390:	11 82       	std	Z+1, r1	; 0x01
 392:	10 82       	st	Z, r1
 394:	fc 01       	movw	r30, r24
 396:	ee 0f       	add	r30, r30
 398:	ff 1f       	adc	r31, r31
 39a:	ee 5a       	subi	r30, 0xAE	; 174
 39c:	fc 4f       	sbci	r31, 0xFC	; 252
 39e:	11 82       	std	Z+1, r1	; 0x01
 3a0:	10 82       	st	Z, r1
 3a2:	fc 01       	movw	r30, r24
 3a4:	ee 0f       	add	r30, r30
 3a6:	ff 1f       	adc	r31, r31
 3a8:	ec 5a       	subi	r30, 0xAC	; 172
 3aa:	fc 4f       	sbci	r31, 0xFC	; 252
 3ac:	11 82       	std	Z+1, r1	; 0x01
 3ae:	10 82       	st	Z, r1
 3b0:	fc 01       	movw	r30, r24
 3b2:	ee 0f       	add	r30, r30
 3b4:	ff 1f       	adc	r31, r31
 3b6:	ea 5a       	subi	r30, 0xAA	; 170
 3b8:	fc 4f       	sbci	r31, 0xFC	; 252
 3ba:	11 82       	std	Z+1, r1	; 0x01
 3bc:	10 82       	st	Z, r1
 3be:	04 96       	adiw	r24, 0x04	; 4
 3c0:	90 93 4d 03 	sts	0x034D, r25	; 0x80034d <__data_end+0x1>
 3c4:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <__data_end>
 3c8:	0f 5f       	subi	r16, 0xFF	; 255
 3ca:	1f 4f       	sbci	r17, 0xFF	; 255
 3cc:	f7 01       	movw	r30, r14
 3ce:	01 90       	ld	r0, Z+
 3d0:	00 20       	and	r0, r0
 3d2:	e9 f7       	brne	.-6      	; 0x3ce <selectLetters+0xfe>
 3d4:	31 97       	sbiw	r30, 0x01	; 1
 3d6:	ee 19       	sub	r30, r14
 3d8:	ff 09       	sbc	r31, r15
 3da:	0e 17       	cp	r16, r30
 3dc:	1f 07       	cpc	r17, r31
 3de:	08 f4       	brcc	.+2      	; 0x3e2 <selectLetters+0x112>
 3e0:	8c cf       	rjmp	.-232    	; 0x2fa <selectLetters+0x2a>
 3e2:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <__data_end>
 3e6:	90 91 4d 03 	lds	r25, 0x034D	; 0x80034d <__data_end+0x1>
 3ea:	47 96       	adiw	r24, 0x17	; 23
 3ec:	90 93 4f 03 	sts	0x034F, r25	; 0x80034f <updateCount+0x1>
 3f0:	80 93 4e 03 	sts	0x034E, r24	; 0x80034e <updateCount>
 3f4:	63 96       	adiw	r28, 0x13	; 19
 3f6:	0f b6       	in	r0, 0x3f	; 63
 3f8:	f8 94       	cli
 3fa:	de bf       	out	0x3e, r29	; 62
 3fc:	0f be       	out	0x3f, r0	; 63
 3fe:	cd bf       	out	0x3d, r28	; 61
 400:	df 91       	pop	r29
 402:	cf 91       	pop	r28
 404:	1f 91       	pop	r17
 406:	0f 91       	pop	r16
 408:	ff 90       	pop	r15
 40a:	ef 90       	pop	r14
 40c:	df 90       	pop	r13
 40e:	cf 90       	pop	r12
 410:	08 95       	ret

00000412 <scrollLeft>:
 412:	8f 92       	push	r8
 414:	9f 92       	push	r9
 416:	af 92       	push	r10
 418:	bf 92       	push	r11
 41a:	cf 92       	push	r12
 41c:	df 92       	push	r13
 41e:	ef 92       	push	r14
 420:	ff 92       	push	r15
 422:	0f 93       	push	r16
 424:	1f 93       	push	r17
 426:	cf 93       	push	r28
 428:	df 93       	push	r29
 42a:	00 e0       	ldi	r16, 0x00	; 0
 42c:	10 e0       	ldi	r17, 0x00	; 0
 42e:	e1 2c       	mov	r14, r1
 430:	f1 2c       	mov	r15, r1
 432:	0f 2e       	mov	r0, r31
 434:	fb e2       	ldi	r31, 0x2B	; 43
 436:	9f 2e       	mov	r9, r31
 438:	f0 2d       	mov	r31, r0
 43a:	aa 24       	eor	r10, r10
 43c:	a3 94       	inc	r10
 43e:	0f 2e       	mov	r0, r31
 440:	f4 e7       	ldi	r31, 0x74	; 116
 442:	cf 2e       	mov	r12, r31
 444:	d1 2c       	mov	r13, r1
 446:	f0 2d       	mov	r31, r0
 448:	0f 2e       	mov	r0, r31
 44a:	f4 e9       	ldi	r31, 0x94	; 148
 44c:	8f 2e       	mov	r8, r31
 44e:	f0 2d       	mov	r31, r0
 450:	7e de       	rcall	.-772    	; 0x14e <startDotmatrix>
 452:	01 30       	cpi	r16, 0x01	; 1
 454:	11 05       	cpc	r17, r1
 456:	49 f0       	breq	.+18     	; 0x46a <scrollLeft+0x58>
 458:	02 30       	cpi	r16, 0x02	; 2
 45a:	11 05       	cpc	r17, r1
 45c:	49 f0       	breq	.+18     	; 0x470 <scrollLeft+0x5e>
 45e:	01 15       	cp	r16, r1
 460:	11 05       	cpc	r17, r1
 462:	41 f4       	brne	.+16     	; 0x474 <scrollLeft+0x62>
 464:	80 ee       	ldi	r24, 0xE0	; 224
 466:	7c de       	rcall	.-776    	; 0x160 <writeToDotmatrix>
 468:	05 c0       	rjmp	.+10     	; 0x474 <scrollLeft+0x62>
 46a:	82 ee       	ldi	r24, 0xE2	; 226
 46c:	79 de       	rcall	.-782    	; 0x160 <writeToDotmatrix>
 46e:	02 c0       	rjmp	.+4      	; 0x474 <scrollLeft+0x62>
 470:	88 ee       	ldi	r24, 0xE8	; 232
 472:	76 de       	rcall	.-788    	; 0x160 <writeToDotmatrix>
 474:	e7 01       	movw	r28, r14
 476:	b1 2c       	mov	r11, r1
 478:	8b 2d       	mov	r24, r11
 47a:	72 de       	rcall	.-796    	; 0x160 <writeToDotmatrix>
 47c:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <updateCount>
 480:	90 91 4f 03 	lds	r25, 0x034F	; 0x80034f <updateCount+0x1>
 484:	9e 01       	movw	r18, r28
 486:	28 1b       	sub	r18, r24
 488:	39 0b       	sbc	r19, r25
 48a:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <__data_end>
 48e:	90 91 4d 03 	lds	r25, 0x034D	; 0x80034d <__data_end+0x1>
 492:	82 0f       	add	r24, r18
 494:	93 1f       	adc	r25, r19
 496:	01 96       	adiw	r24, 0x01	; 1
 498:	12 f4       	brpl	.+4      	; 0x49e <scrollLeft+0x8c>
 49a:	89 2d       	mov	r24, r9
 49c:	9a 2d       	mov	r25, r10
 49e:	88 0f       	add	r24, r24
 4a0:	99 1f       	adc	r25, r25
 4a2:	fc 01       	movw	r30, r24
 4a4:	e0 5b       	subi	r30, 0xB0	; 176
 4a6:	fc 4f       	sbci	r31, 0xFC	; 252
 4a8:	80 81       	ld	r24, Z
 4aa:	5a de       	rcall	.-844    	; 0x160 <writeToDotmatrix>
 4ac:	21 96       	adiw	r28, 0x01	; 1
 4ae:	b3 94       	inc	r11
 4b0:	b3 94       	inc	r11
 4b2:	80 e1       	ldi	r24, 0x10	; 16
 4b4:	b8 12       	cpse	r11, r24
 4b6:	e0 cf       	rjmp	.-64     	; 0x478 <scrollLeft+0x66>
 4b8:	e8 e0       	ldi	r30, 0x08	; 8
 4ba:	ee 0e       	add	r14, r30
 4bc:	f1 1c       	adc	r15, r1
 4be:	f6 01       	movw	r30, r12
 4c0:	80 82       	st	Z, r8
 4c2:	0f 5f       	subi	r16, 0xFF	; 255
 4c4:	1f 4f       	sbci	r17, 0xFF	; 255
 4c6:	f8 e1       	ldi	r31, 0x18	; 24
 4c8:	ef 16       	cp	r14, r31
 4ca:	f1 04       	cpc	r15, r1
 4cc:	09 f0       	breq	.+2      	; 0x4d0 <scrollLeft+0xbe>
 4ce:	c0 cf       	rjmp	.-128    	; 0x450 <scrollLeft+0x3e>
 4d0:	80 91 4e 03 	lds	r24, 0x034E	; 0x80034e <updateCount>
 4d4:	90 91 4f 03 	lds	r25, 0x034F	; 0x80034f <updateCount+0x1>
 4d8:	01 97       	sbiw	r24, 0x01	; 1
 4da:	90 93 4f 03 	sts	0x034F, r25	; 0x80034f <updateCount+0x1>
 4de:	80 93 4e 03 	sts	0x034E, r24	; 0x80034e <updateCount>
 4e2:	18 16       	cp	r1, r24
 4e4:	19 06       	cpc	r1, r25
 4e6:	4c f0       	brlt	.+18     	; 0x4fa <scrollLeft+0xe8>
 4e8:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <__data_end>
 4ec:	90 91 4d 03 	lds	r25, 0x034D	; 0x80034d <__data_end+0x1>
 4f0:	47 96       	adiw	r24, 0x17	; 23
 4f2:	90 93 4f 03 	sts	0x034F, r25	; 0x80034f <updateCount+0x1>
 4f6:	80 93 4e 03 	sts	0x034E, r24	; 0x80034e <updateCount>
 4fa:	df 91       	pop	r29
 4fc:	cf 91       	pop	r28
 4fe:	1f 91       	pop	r17
 500:	0f 91       	pop	r16
 502:	ff 90       	pop	r15
 504:	ef 90       	pop	r14
 506:	df 90       	pop	r13
 508:	cf 90       	pop	r12
 50a:	bf 90       	pop	r11
 50c:	af 90       	pop	r10
 50e:	9f 90       	pop	r9
 510:	8f 90       	pop	r8
 512:	08 95       	ret

00000514 <getScrollingSpeed>:
}

int getScrollingSpeed(void)
{
	return scrollingSpeed;
 514:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <scrollingSpeed>
 518:	90 91 3b 03 	lds	r25, 0x033B	; 0x80033b <scrollingSpeed+0x1>
 51c:	08 95       	ret

0000051e <wait>:



void wait(int ms)
{
	for (int i = 0; i < ms; i++)
 51e:	18 16       	cp	r1, r24
 520:	19 06       	cpc	r1, r25
 522:	6c f4       	brge	.+26     	; 0x53e <wait+0x20>
 524:	20 e0       	ldi	r18, 0x00	; 0
 526:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 528:	ef ec       	ldi	r30, 0xCF	; 207
 52a:	f7 e0       	ldi	r31, 0x07	; 7
 52c:	31 97       	sbiw	r30, 0x01	; 1
 52e:	f1 f7       	brne	.-4      	; 0x52c <wait+0xe>
 530:	00 c0       	rjmp	.+0      	; 0x532 <wait+0x14>
 532:	00 00       	nop
 534:	2f 5f       	subi	r18, 0xFF	; 255
 536:	3f 4f       	sbci	r19, 0xFF	; 255
 538:	82 17       	cp	r24, r18
 53a:	93 07       	cpc	r25, r19
 53c:	a9 f7       	brne	.-22     	; 0x528 <wait+0xa>
 53e:	08 95       	ret

00000540 <main>:

void wait(int ms);

int main( void )
{
	dotmatrixInit();
 540:	1a de       	rcall	.-972    	; 0x176 <dotmatrixInit>
	clearDisplay();
 542:	79 de       	rcall	.-782    	; 0x236 <clearDisplay>
 544:	82 e4       	ldi	r24, 0x42	; 66
	
	selectLetters("FUCK DEZE");
 546:	93 e0       	ldi	r25, 0x03	; 3
 548:	c3 de       	rcall	.-634    	; 0x2d0 <selectLetters>

	while (1)
	{
		scrollLeft();
		
		wait(getScrollingSpeed()*100);
 54a:	c4 e6       	ldi	r28, 0x64	; 100
	
	selectLetters("FUCK DEZE");

	while (1)
	{
		scrollLeft();
 54c:	62 df       	rcall	.-316    	; 0x412 <scrollLeft>
 54e:	e2 df       	rcall	.-60     	; 0x514 <getScrollingSpeed>
		
		wait(getScrollingSpeed()*100);
 550:	9c 01       	movw	r18, r24
 552:	c2 9f       	mul	r28, r18
 554:	c0 01       	movw	r24, r0
 556:	c3 9f       	mul	r28, r19
 558:	90 0d       	add	r25, r0
 55a:	11 24       	eor	r1, r1
 55c:	e0 df       	rcall	.-64     	; 0x51e <wait>
 55e:	f6 cf       	rjmp	.-20     	; 0x54c <main+0xc>

00000560 <_exit>:
 560:	f8 94       	cli

00000562 <__stop_program>:
 562:	ff cf       	rjmp	.-2      	; 0x562 <__stop_program>
